<?xml version="1.0" encoding="UTF-8"?>
<language id="orus" name="Orus" version="2.0" _section="Source">
  <metadata>
    <property name="mimetypes">text/x-orus</property>
    <property name="globs">*.orus</property>
    <property name="line-comment-start">//</property>
    <property name="block-comment-start">/*</property>
    <property name="block-comment-end">*/</property>
  </metadata>

  <styles>
    <style id="comment" name="Comment" map-to="def:comment"/>
    <style id="string" name="String" map-to="def:string"/>
    <style id="keyword" name="Keyword" map-to="def:keyword"/>
    <style id="type" name="Data Type" map-to="def:type"/>
    <style id="boolean" name="Boolean value" map-to="def:boolean"/>
    <style id="number" name="Number" map-to="def:number"/>
    <style id="builtin" name="Builtin Function" map-to="def:builtin"/>
  </styles>

  <definitions>
    <context id="line-comment" style-ref="comment">
      <start>//</start>
      <end>$</end>
    </context>

    <context id="block-comment" style-ref="comment">
      <start>/\*</start>
      <end>\*/</end>
      <include>
        <context ref="def:in-comment"/>
      </include>
    </context>

    <context id="string" style-ref="string">
      <start>"</start>
      <end>"</end>
      <include>
        <context ref="def:escape"/>
      </include>
    </context>

    <context id="keywords" style-ref="keyword">
      <keyword>fn</keyword>
      <keyword>let</keyword>
      <keyword>mut</keyword>
      <keyword>if</keyword>
      <keyword>else</keyword>
      <keyword>elif</keyword>
      <keyword>for</keyword>
      <keyword>in</keyword>
      <keyword>while</keyword>
      <keyword>return</keyword>
      <keyword>struct</keyword>
      <keyword>pub</keyword>
      <keyword>use</keyword>
      <keyword>match</keyword>
      <keyword>try</keyword>
      <keyword>catch</keyword>
      <keyword>throw</keyword>
      <keyword>const</keyword>
      <keyword>as</keyword>
      <keyword>nil</keyword>
      <keyword>impl</keyword>
      <keyword>continue</keyword>
      <keyword>break</keyword>
      <keyword>enum</keyword>
    </context>

    <context id="types" style-ref="type">
      <keyword>i32</keyword>
      <keyword>i64</keyword>
      <keyword>f32</keyword>
      <keyword>f64</keyword>
      <keyword>bool</keyword>
      <keyword>char</keyword>
      <keyword>string</keyword>
      <keyword>u32</keyword>
      <keyword>u64</keyword>
    </context>

    <context id="boolean" style-ref="boolean">
      <keyword>true</keyword>
      <keyword>false</keyword>
    </context>

    <context id="builtin-functions" style-ref="builtin">
      <keyword>print</keyword>
      <keyword>len</keyword>
      <keyword>range</keyword>
      <keyword>timestamp</keyword>
      <keyword>push</keyword>
      <keyword>pop</keyword>
      <keyword>sum</keyword>
      <keyword>min</keyword>
      <keyword>max</keyword>
      <keyword>sort</keyword>
      <keyword>input</keyword>
      <keyword>int</keyword>
      <keyword>float</keyword>
      <keyword>type_of</keyword>
      <keyword>is_type</keyword>
      <keyword>Ok</keyword>
      <keyword>Err</keyword>
    </context>

    <context id="number" style-ref="number">
      <match extended="true">
        (?&lt;![\w\.])
        (
          [0-9]+|
          0[xX][0-9a-fA-F]+|
          [0-9]+\.[0-9]+|
          \.[0-9]+
        )
        (?![\w\.])
      </match>
    </context>

    <context id="orus">
      <include>
        <context ref="line-comment"/>
        <context ref="block-comment"/>
        <context ref="string"/>
        <context ref="keywords"/>
        <context ref="types"/>
        <context ref="boolean"/>
        <context ref="builtin-functions"/>
        <context ref="number"/>
      </include>
    </context>
  </definitions>
</language>
